version: 2

references:
  container_config: &container_config
    docker:
      - image: circleci/node:8.9
    working_directory: ~/repo

  ui_test_container: &ui_test_container
    docker:
      - image: circleci/node:8.9
    working_directory: ~/repo

  helm_container: &helm_container
    docker:
      - image: blockcluster/circleci-kubectl-base
    working_directory: ~/repo

  restore_repo: &restore_repo
    restore_cache:
      keys:
        - repo-bc-app-{{ .Branch }}-{{ .Revision }}

  save_repo: &save_repo
    save_cache:
      key: repo-bc-app-{{ .Branch }}-{{ .Revision }}
      paths:
        - .

  save_testing_repo: &save_testing_repo
    save_cache:
      key: repo-test-app-{{ .Branch }}-{{ .Revision }}
      paths:
        - .

  restore_testing_repo: &restore_testing_repo
    restore_cache:
      keys:
        - repo-test-app-{{ .Branch }}-{{ .Revision }}

  deploy_tag_filters: &deploy_tag_filters
    filters:
      branches:
        only:
          - master
          - hot-fix
          - staging
          - dev
          - test
      tags:
        only:
          - dev
          - development
          - test
          - staging
          - production

  build_tags: &build_tags
    filters:
      branches:
        ignore:
          - master
          - dev
          - staging
          - test
          - production

jobs:
  checkout_code:
    <<: *container_config
    steps:
      - *restore_repo
      - checkout
      - run:
          name: 'Init submodules'
          command: git submodule init
      - run:
          name: 'Checkout submodules'
          command: git submodule update
      - *save_repo

  docker_push:
    <<: *helm_container
    steps:
      - *restore_repo
      - run:
          name: 'Build start notification'
          command: ./.circleci/build-start-notification.sh
      - setup_remote_docker:
          version: 17.11.0-ce
      - run:
          name: 'Docker build'
          command: ./.circleci/docker-build.sh
          no_output_timeout: '20m'
      - run:
          name: 'Docker push'
          command: ./.circleci/docker-push.sh

  docker_push_for_test:
    <<: *helm_container
    steps:
      - *restore_repo
      - setup_remote_docker:
          version: 17.11.0-ce
      - run:
          name: 'Update IS_TEST'
          command: |
            echo 'export IS_TEST=1' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: 'Docker build'
          command: 'IS_TEST=1 ./.circleci/docker-build.sh'
          no_output_timeout: '20m'
      - run:
          name: 'Docker push'
          command: 'IS_TEST=1 ./.circleci/docker-push.sh'

  run_ui_tests:
    <<: *ui_test_container
    steps:
      - *restore_repo
      - run:
          name: 'Update IS_TEST'
          command: |
            echo 'export IS_TEST=1' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: 'Install dependencies'
          command: './.circleci/install-chrome-dependencies.sh'
      - run:
          name: 'Chrome tests'
          command: 'npm run ui-test'

  wait_for_deployment:
    <<: *container_config
    steps:
      - run:
          name: 'Wait for deployment'
          command: 'sleep 150'

  fetch_testing_module:
    <<: *container_config
    steps:
      - add_ssh_keys:
          fingerprints:
            - f0:77:e5:01:af:bb:0a:28:10:93:12:70:5f:aa:7e:e9
      - run:
          name: 'Clone testing module'
          command: 'git clone git@github.com:BlockClusterApp/circleci-webapp-tests.git'
      - run:
          name: 'Npm Install'
          command: 'npm install'
      - *save_testing_repo

  hyperion_tests:
    <<: *container_config
    steps:
      - *restore_testing_repo
      - run:
          name: 'Run Hyperion tests'
          command: 'npm run test:hyperion'

  paymeter_tests:
    <<: *container_config
    steps:
      - *restore_testing_repo
      - run:
          name: 'Run Paymeter tests'
          command: 'npm run test:paymeter'

  apply_kube_config:
    <<: *helm_container
    steps:
      - *restore_repo
      - run:
          name: 'Helm apply'
          command: ./.circleci/helm-apply.sh
      - run:
          name: 'Build end notification'
          command: ./.circleci/build-end-notification.sh

  apply_kube_config_for_test:
    <<: *helm_container
    steps:
      - *restore_repo
      - run:
          name: 'Helm apply'
          command: 'IS_TEST=1 ./.circleci/helm-apply.sh'

  notify_github_bot:
    <<: *ui_test_container
    steps:
      - *restore_repo
      - run:
          name: 'Curl'
          command: './.circleci/notify-github-bot.sh'

  build:
    <<: *container_config
    steps:
      - *restore_repo
      - run:
          name: 'Repo Build'
          command: ./.circleci/build.sh

workflows:
  version: 2
  build-and-push:
    jobs:
      - checkout_code:
          <<: *deploy_tag_filters

      - build:
          <<: *build_tags
          requires:
            - checkout_code

      - docker_push:
          <<: *deploy_tag_filters
          requires:
            - checkout_code
          context: aws-creds

      - apply_kube_config:
          <<: *deploy_tag_filters
          requires:
            - docker_push
          context: aws-creds
  build-and-test:
    jobs:
      - checkout_code:
          <<: *build_tags
      - docker_push_for_test:
          <<: *build_tags
          requires:
            - checkout_code
          context: aws-creds
      - fetch_testing_module:
          <<: *build_tags
          requires:
            - docker_push_for_test
      - apply_kube_config_for_test:
          <<: *build_tags
          requires:
            - docker_push_for_test
          context: aws-creds
      - wait_for_deployment:
          <<: *build_tags
          requires:
            - apply_kube_config_for_test
      - run_ui_tests:
          <<: *build_tags
          requires:
            - wait_for_deployment
      - hyperion_tests:
          <<: *build_tags
          requires:
            - fetch_testing_module
            - wait_for_deployment
      - paymeter_tests:
          <<: *build_tags
          requires:
            - fetch_testing_module
            - wait_for_deployment
      - notify_github_bot:
          <<: *build_tags
          requires:
            - hyperion_tests
            - paymeter_tests
