version: 2

references:
  container_config: &container_config
    docker:
      - image: circleci/node:8.9
    working_directory: ~/repo

  helm_container: &helm_container
    docker:
      - image: blockcluster/circleci-kubectl-base
    working_directory: ~/repo  

  restore_repo: &restore_repo
    restore_cache:
      keys:
        - repo-bc-app-{{ .Branch }}-{{ .Revision }}

  save_repo: &save_repo
    save_cache:
      key: repo-bc-app-{{ .Branch }}-{{ .Revision }}
      paths:
        - .
 
  deploy_tag_filters: &deploy_tag_filters
    filters:
      branches:
        ignore: /.*/
      tags:
        only:
          - dev
          - development
          - test       
          - staging
          - production

  build_tags: &build_tags
    filters:
      branches:
        only:
          - master
      tags:
        ignore:
          - dev
          - development
          - test       
          - staging
          - production

  all_tags: &all_tags
    filters:
      tags:
        only: /.*/

jobs:
  checkout_code:
    <<: *container_config
    steps:
      - *restore_repo
      - checkout
      - *save_repo

  docker_push:
    <<: *helm_container
    steps:
      - *restore_repo
      - run:
          name: "Build start notification"
          command: ./.circleci/build-start-notification.sh
      - setup_remote_docker:
          version: 17.11.0-ce
      - run:
          name: "Docker build"
          command: ./.circleci/docker-build.sh
      - run:
          name: "Docker push"
          command: ./.circleci/docker-push.sh

  apply_kube_config:
    <<: *helm_container
    steps:
      - *restore_repo
      - run:
          name: "Helm apply"
          command: ./.circleci/helm-apply.sh
      - run:
          name: "Build end notification"
          command: ./.circleci/build-end-notification.sh

  build:
    <<: *container_config
    steps:
      - *restore_repo
      - run:
          name: "Repo Build"
          command: ./.circleci/build.sh
        
workflows:
  version: 2
  build-and-push:
    jobs:
      - checkout_code:
          <<: *all_tags

      - build:
          <<: *build_tags
          requires:
            - checkout_code

      - docker_push:
          <<: *deploy_tag_filters
          requires: 
            - checkout_code
          context: aws-creds

      - apply_kube_config:
          <<: *deploy_tag_filters
          requires: 
            - docker_push
          context: aws-creds
      